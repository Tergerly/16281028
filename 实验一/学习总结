一、操作系统设计目标
1、方便性
使计算机系统更方便用户的使用。例如：图形化接口、文件方式提供用户数据管理等。
2、有效性
改善资源利用率、提高系统吞吐量。例如：有效管理和分配资源，合理组织计算机工作流程。
3、安全性
操作系统不被应用程序破坏。
4、可扩充性
计算机硬件和体系结构的迅猛发展及其所对应的更高的功能和性能要求。
5、开放性
不同厂家与不同类型的计算机及其设备的网络化集成和协同工作，实现应用程序可移植性和互操作性。

二、操作系统作用
1、用作扩充机器（或虚拟机）
在裸机上提供一个虚拟机抽象层，处理复杂多样的硬件，使计算机系统功能显著增强、使用更为方便
2、用户与计算机硬件系统之间的接口
（1）命令方式（操作系统外壳）
面向一般用户
命令行/菜单式/命令脚本式/图形用户接口
（2）系统调用方式（操作系统内核）
面向程序开发人员
形式上类似于过程调用，编制程序中使用
3、计算机系统资源的管理者
（1）管理对象
处理器、存储器、外围设备以及信息
（2）管理内容
资源的分配、回收和访问操作
共享、保护

三、系统调用
1、定义
由操作系统实现的所有系统调用所构成的集合即程序接口或应用编程接口(Application Programming Interface，API)。是应用程序同系统之间的接口。
2、API与系统调用的关系图
应用程序——API——系统调用
应用程序——API 
  （不涉及操作系统内核的操作，API独立完成）
应用程序——系统调用
  （特殊要求，API无法有效实现时）
3、系统调用的类型
（1）进程控制
   进程的创建、结束、等待子进程结束；
   进程属性设置与获取；
   执行一个文件（进程映像替换）
（2）文件操纵
   文件的创建、打开、关闭、读/写
（3）进程通信
   连接打开与关闭、消息发送与接收
（4）系统信息维护
   时间设置与获取、文件访问/修改时间设置
4、实现系统调用
（1）系统调用是从用户空间进入操作系统内核的入口。
（2）实现系统调用的程序是操作系统内核的程序，运行在内核态，与普通子程序不同。
（3）为了保护内核不受用户破坏，不允许用户使用Call或者JMP访问内核中的任意位置，只允许用户通过特殊的“门”使用操作系统的服务。
（4）这些“门”采用了软中断INT或者陷门TRAP指令。系统执行中断时，将自动把CPU用户态转为内核态。
